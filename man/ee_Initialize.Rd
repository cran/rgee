% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_Initialize.R
\name{ee_Initialize}
\alias{ee_Initialize}
\title{Authenticate and Initialize Earth Engine}
\usage{
ee_Initialize(
  email = NULL,
  drive = FALSE,
  gcs = FALSE,
  display = FALSE,
  quiet = FALSE
)
}
\arguments{
\item{email}{Character (optional, e.g. \code{data.colec.fbf@gmail.com}). The email
argument is used to create a folder inside the path \code{~/.config/earthengine/}
that save all credentials for a specific Google identity.}

\item{drive}{Logical (optional). If TRUE, the drive credential
will be cached in the path \code{~/.config/earthengine/}.}

\item{gcs}{Logical (optional). If TRUE, the Google Cloud Storage
credential will be cached in the path \code{~/.config/earthengine/}.}

\item{display}{Logical. If TRUE display the earthengine authentication URL.}

\item{quiet}{Logical. Suppress info messages.}
}
\value{
No return value, called for initializing the earthengine-api.
}
\description{
Authorize rgee to manage Earth Engine resources, Google
Drive, and Google Cloud Storage. The \code{ee_initialize()} via
web-browser will ask to sign in to your Google account and
allows you to grant permission to manage resources. This function is
a wrapper around \code{rgee::ee$Initialize()}.
}
\details{
\code{ee_Initialize(...)} can manage Google drive and Google
Cloud Storage resources using the R packages googledrive and
googlecloudStorageR, respectively. By default, rgee does not require
them, these are only necessary to enable rgee I/O functionality.
All user credentials are saved in the directory
\code{~/.config/earthengine/}, if a user does not specify the email
argument all user credentials will be saved in a subdirectory
called \code{~/.config/earthengine/ndef}.
}
\examples{
\dontrun{
library(rgee)

# Simple init - Load just the Earth Engine credential
ee_Initialize()
ee_user_info()
}
}
\seealso{
Other session management functions: 
\code{\link{ee_user_info}()},
\code{\link{ee_users}()},
\code{\link{ee_version}()}
}
\concept{session management functions}
